load("W:/APS/Codes/Data/food-texture.csv")
setwd("W:/APS/Codes")
#file = 'http://openmv.net/file/food-texture.csv'
file = 'Data/food-texture.csv'
foodData = read.csv(file, header = TRUE, row.names = 1, stringsAsFactors = FALSE)
head(foodData, 5)
#file = 'http://openmv.net/file/food-texture.csv'
courtdata = 'Data/court.csv'
courtData = read.csv(file, header = TRUE, )
head(courtData, 10)
#file = 'http://openmv.net/file/food-texture.csv'
courtdata = 'Data/court.csv'
courtData = read.csv(file, header = TRUE, )
head(courtData, 10)
#file = 'http://openmv.net/file/food-texture.csv'
courtdata = 'Data/court.csv'
courtData = read.csv(courtdata, header = TRUE, )
head(courtData, 10)
courtdecision = function(){
jcp = c(0.9,0.8,0.7,0.6,0.5)
jicp = 1-jcp # broadcasting
p = matrix(?, ?, ?)
courtdecision = function(){
jcp = c(0.9,0.8,0.7,0.6,0.5)
jicp = 1-jcp # broadcasting probabilty of wrong decison
decision = c(1, 0)
cdecision = vector('integer', ncol(p))
for (j in ncol(p)){
cdecision[j] = sample(decision,2,prob=p[,j])
}
if (sum(cdecision) >= 3){
return(1)
}
else{
return(0)
}
}
courtdecision = function(){
jcp = c(0.9,0.8,0.7,0.6,0.5)
jicp = 1-jcp # broadcasting probabilty of wrong decison
decision = c(1, 0)
cdecision = vector('integer', ncol(p))
for (j in ncol(p)){
cdecision[j] = sample(decision,2,prob=p[,j])
}
if (sum(cdecision) >= 3){
return(1)
}
else{
return(0)
}
}
courtdecision = function(){
jcp = c(0.9,0.8,0.7,0.6,0.5)
jicp = 1-jcp # broadcasting probabilty of wrong decison
decision = c(1, 0)
cdecision = vector('integer', ncol(p))
for (j in ncol(p)){
cdecision[j] = sample(decision,2,prob=p[,j])
}
if (sum(cdecision) >= 3){
return(1)
}
else{
return(0)
}
}
results = replicate(1000,courtdecision())
results = replicate(1000,courtdecision())
courtdecision = function(){
jcp = c(0.9,0.8,0.7,0.6,0.5)
jicp = 1-jcp # broadcasting probabilty of wrong decison
p= matric(c(jcp,jicp) , byrow=T , nrow=2)
decision = c(1, 0)
cdecision = vector('integer', ncol(p))
for (j in ncol(p)){
cdecision[j] = sample(decision,2,prob=p[,j])
}
if (sum(cdecision) >= 3){
return(1)
}
else{
return(0)
}
}
courtdecision = function(){
jcp = c(0.9,0.8,0.7,0.6,0.5)
jicp = 1-jcp # broadcasting probabilty of wrong decison
p= matric(c(jcp,jicp) , byrow=T , nrow=2)
decision = c(1, 0)
cdecision = vector('integer', ncol(p))
for (j in ncol(p)){
cdecision[j] = sample(decision,2,prob=p[,j])
}
if (sum(cdecision) >= 3){
return(1)
}
else{
return(0)
}
}
results = replicate(1000,courtdecision())
courtdecision = function(){
jcp = c(0.9,0.8,0.7,0.6,0.5)
jicp = 1-jcp # broadcasting probabilty of wrong decison
p= matrix(c(jcp,jicp) , byrow=T , nrow=2)
decision = c(1, 0)
cdecision = vector('integer', ncol(p))
for (j in ncol(p)){
cdecision[j] = sample(decision,2,prob=p[,j])
}
if (sum(cdecision) >= 3){
return(1)
}
else{
return(0)
}
}
results = replicate(1000,courtdecision())
print(results)
courtdecision = function(){
jcp = c(0.9,0.8,0.7,0.6,0.5)
jicp = 1-jcp # broadcasting probabilty of wrong decison
p= matrix(c(jcp,jicp) , byrow=T , nrow=2)
decision = c(1, 0)
cdecision = vector('integer', ncol(p))
for (j in ncol(p)){
cdecision[j] = sample(decision,1,prob=p[,j])
}
if (sum(cdecision) >= 3){
return(1)
}
else{
return(0)
}
}
results = replicate(1000,courtdecision())
print(results)
courtdecision = function(){
jcp = c(0.95,0.95,0.90,0.90,0.80)
jicp = 1-jcp # broadcasting probabilty of wrong decison
p= matrix(c(jcp,jicp) , byrow=T , nrow=2)
decision = c(1, 0)
cdecision = vector('integer', ncol(p))
for (j in ncol(p)){
cdecision[j] = sample(decision,1,prob=p[,j])
}
if (sum(cdecision) >= 3){
return(1)
}
else{
return(0)
}
}
results = replicate(1000,courtdecision())
print(results)
courtdecision = function(){
jcp = c(0.95,0.95,0.90,0.90,0.80)
jicp = 1-jcp # broadcasting probabilty of wrong decison
p= matrix(c(jcp,jicp) ,  nrow=2,byrow=T )
decision = c(1, 0)
cdecision = vector('integer', ncol(p))
for (j in ncol(p)){
cdecision[j] = sample(decision,1,prob=p[,j])
}
if (sum(cdecision) >= 3){
return(1)
}
else{
return(0)
}
}
results = replicate(1000,courtdecision())
print(results)
courtdecision = function(){
jcp = c(0.95,0.95,0.90,0.90,0.80)
jicp = 1-jcp # broadcasting probabilty of wrong decison
p= matrix(c(jcp,jicp) ,  nrow=2,byrow=T )
decision = c(1, 0)
cdecision = vector('integer', ncol(p))
for (j in 1: ncol(p)){
cdecision[j] = sample(decision,1,prob=p[,j])
}
if (sum(cdecision) >= 3){
return(1)
}
else{
return(0)
}
}
results = replicate(1000,courtdecision())
print(results)
results = replicate(1000,courtdecision())
print(results)
mean(results)
results = replicate(1000,courtdecision())
print(results)
mean(results)
results = replicate(1000,courtdecision())
print(results)
mean(results)
results = replicate(1000,courtdecision())
print(results)
mean(results)
results = replicate(1000,courtdecision())
print(results)
mean(results)
results = replicate(1000,courtdecision())
print(results)
mean(results)
results = replicate(1000,courtdecision())
print(results)
mean(results)
results = replicate(1000,courtdecision())
print(results)
mean(results)
results = replicate(1000,courtdecision())
print(results)
mean(results)
results = replicate(1000,courtdecision())
print(results)
mean(results)
results = replicate(1000,courtdecision())
print(results)
mean(results)
results = replicate(1000,courtdecision())
print(results)
mean(results)
results = replicate(1000,courtdecision())
print(results)
mean(results)
results = replicate(1000,courtdecision())
print(results)
mean(results)
courtdecision = function(){
jcp = c(0.20,0.95,0.90,0.90,0.80)
jicp = 1-jcp # broadcasting probabilty of wrong decison
p= matrix(c(jcp,jicp) ,  nrow=2,byrow=T )
decision = c(1, 0)
cdecision = vector('integer', ncol(p))
for (j in 1: ncol(p)){
cdecision[j] = sample(decision,1,prob=p[,j])
}
if (sum(cdecision) >= 3){
return(1)
}
else{
return(0)
}
}
results = replicate(1000,courtdecision())
print(results)
mean(results)
courtdecision = function(){
jcp = c(0.95,0.95,0.90,0.90,0.80)
jicp = 1-jcp # broadcasting probabilty of wrong decison
p= matrix(c(jcp,jicp) ,  nrow=2,byrow=T )
decision = c(1, 0)
cdecision = vector('integer', ncol(p))
for (j in 1: ncol(p)){
cdecision[j] = sample(decision,1,prob=p[,j])
}
if (sum(cdecision) >= 3){
return(1)
}
else{
return(0)
}
}
results = replicate(1000,courtdecision())
print(results)
mean(results)
file='data/emergency.csv'
emergencyData=read.csv(file,header=T)
file='data/emergency.csv'
emergencyData=read.csv(file,header=T)
head(emergencyData,5)
